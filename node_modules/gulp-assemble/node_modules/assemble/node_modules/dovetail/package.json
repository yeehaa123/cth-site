{
  "name": "dovetail",
  "description": "Make your application pluggable!",
  "version": "0.3.0",
  "homepage": "https://github.com/assemble/dovetail",
  "repository": {
    "type": "git",
    "url": "https://github.com/assemble/dovetail.git"
  },
  "bugs": {
    "url": "https://github.com/assemble/dovetail/issues"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "main": "./lib/index.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "dependencies": {
    "lodash": "~2.4.1",
    "resolve-dep": "~0.2.0",
    "async": "~0.2.9",
    "globule": "~0.2.0",
    "boson": "~0.1.2"
  },
  "devDependencies": {
    "chai": "~1.8.1",
    "verb": "^0.2.5"
  },
  "keywords": [
    "middleware",
    "pluggable",
    "plugin",
    "plugins"
  ],
  "author": {
    "name": "Brian Woodward",
    "url": "https://github.com/doowb"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/assemble/dovetail/blob/master/LICENSE-MIT"
    }
  ],
  "readme": "# dovetail [![NPM version](https://badge.fury.io/js/dovetail.png)](http://badge.fury.io/js/dovetail)\n\n> Make your application pluggable!\n\n## Getting Started\nTo install the module, run the following in the command line:\n\n```bash\nnpm i dovetail --save\n```\n\nUse within your application with the following lines of JavaScript:\n\n```js\nvar events = require('events');\n\n// require the main Dovetail class\nvar Dovetail = require('dovetail');\n\n// create an \"application\" to be pluggable\nvar MyApp = function (options) {\n  // make it an EventEmitter\n  events.EventEmitter.call(this);\n\n  // create a new instance of Dovetail\n  // passing in your application\n  this.dovetail = new Dovetail(this);\n\n  // automatically load middleware\n  this.dovetail.resolve('/path/to/middleware/*.js');\n};\n\nrequire('util').inherits(MyApp, events.EventEmitter);\n```\n\nNothing else is required, but the middleware won't run until you\ntrigger them\n\n```js\nMyApp.prototype.trigger = function (event, params, done) {\n  this.dovetail.runEvent(event, params, done);\n};\n```\n\nNow you can drop a javascript file into your middleware folder and it'll be registered:\n\n```js\nmodule.exports = function (app) {\n\n  // create a middleware function that takes a params object and done callback function\n  var middleware = function (params, next) {\n\n    console.log('This is my custom middleware!');\n    console.log('event', params.event);\n\n    // add something to the params to be passed back to your app\n    params.startTime = new Date();\n\n    // let the app know that the middleware is finished\n    // and the next middleware can run\n    next();\n  };\n\n  middleware.options = {\n\n    // name your middleware\n    name: 'my-custom-middleware',\n\n    // describe your middleware\n    description: 'This is an awesome middleware that runs before the application starts.',\n\n    // list of events your middleware will listen for\n    events: [ 'app:before:start' ]\n\n  };\n\n  // Return an object containing your middleware functions\n  // These will get registered with the app\n  var rtn = {};\n  rtn[middleware.options.name] = middleware;\n  return rtn;\n\n};\n```\n\nCreate a function for your app that will trigger some events:\n\n```js\nMyApp.prototype.start = function () {\n  var self = this;\n\n  // set up some paramets to keep track of state\n  self.params = {};\n\n  // trigger that the app will be starting\n  self.trigger('app:before:start', self.params, function(err) {\n    if (err) {\n      throw new Error(err);\n    }\n    console.log('The app has started');\n\n    // do some work\n\n\n    // trigger that the app is going to end\n    self.trigger('app:before:end', self.params, function (err) {\n      if (err) {\n        throw new Error(err);\n      }\n      console.log('The app has ended');\n    });\n\n  });\n}\n```\n\n\n## Contributing\nFind a bug? Have a feature request? Please [create an Issue](https://github.com/assemble/dovetail/issues).\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality,\nand run `docs` in the command line to build the docs with [Verb](https://github.com/assemble/verb).\n\nPull requests are also encouraged, and if you find this project useful please consider \"starring\" it to show your support! Thanks!\n\n## Author\n\n**Brian Woodward**\n\n+ [github/doowb](https://github.com/doowb)\n+ [twitter/doowb](http://twitter.com/doowb)\n\n\n\n## License\nCopyright (c) 2014 Brian Woodward, contributors.  Released under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on May 01, 2014._\n",
  "readmeFilename": "README.md",
  "_id": "dovetail@0.3.0",
  "_from": "dovetail@^0.3.0"
}
